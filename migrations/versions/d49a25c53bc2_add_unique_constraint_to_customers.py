"""Add unique constraint to customers

Revision ID: d49a25c53bc2
Revises: 54c686efef2a
Create Date: 2025-08-29 14:21:24.209071

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd49a25c53bc2'
down_revision: Union[str, None] = '54c686efef2a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'customers', ['email'])
    op.alter_column('sales', 'sale_date',
               existing_type=sa.DATE(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sales', 'sale_date',
               existing_type=sa.String(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_constraint(None, 'customers', type_='unique')
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('customers', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
